<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Golang Tutorial</title>
    <link>https://hopher.github.io/golang-tutorial/docs/</link>
    <description>Recent content in Docs on Golang Tutorial</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://hopher.github.io/golang-tutorial/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/00-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/00-xx/</guid>
      <description>安装 使用docker，移植性好!!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/01-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/01-xx/</guid>
      <description>安装 使用docker，移植性好!!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/02-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/02-xx/</guid>
      <description> Hello World 实例 package main import &amp;quot;fmt&amp;quot; func main() { fmt.Println(&amp;quot;Hello world&amp;quot;) }  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/03-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/03-xx/</guid>
      <description> 3种变量声明方式  无初始化, 指定变量类型 var 类型推断 短变量声明 :=  示例 package main import &amp;quot;fmt&amp;quot; func main() { // 1. 无初始化, 指定变量类型 var name string var age int fmt.Printf(&amp;quot;%q %d\n&amp;quot;, name, age) // 输出结果 // &amp;quot;&amp;quot; 0 // 2. var 类型推断 var name2 = &amp;quot;gopher2&amp;quot; fmt.Printf(&amp;quot;%s\n&amp;quot;, name2) // 输出结果 // gopher2 // 3. 短变量声明 := name3 := &amp;quot;gopher3&amp;quot; fmt.Printf(&amp;quot;%s\n&amp;quot;, name3) // 输出结果 // gopher3 }  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/04-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/04-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/05-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/05-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/06-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/06-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/07-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/07-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/08-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/08-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/09-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/09-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/10-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/10-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/11-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/11-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/12-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/12-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/13-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/13-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/14-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/14-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/15-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/15-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/16-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/16-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/17-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/17-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/18-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/18-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/19-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/19-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/20-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/20-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/21-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/21-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/22-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/22-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/23-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/23-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/24-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/24-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/25-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/25-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/26-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/26-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/27-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/27-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/28-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/28-xx/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/A1/A01-xx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/A1/A01-xx/</guid>
      <description>Go语言fmt包Printf方法详解 General  %v 以默认的方式打印变量的值 %T 打印变量的类型  Integer  %+d 带符号的整型，fmt.Printf(&amp;quot;%+d&amp;quot;, 255)输出+255 %q 打印单引号 %o 不带零的八进制 %#o 带零的八进制 %x 小写的十六进制 %X 大写的十六进制 %#x 带0x的十六进制 %U 打印Unicode字符 %#U 打印带字符的Unicode %b 打印整型的二进制  Integer width  %5d 表示该整型最大长度是5，下面这段代码
fmt.Printf(&amp;quot;|%5d|&amp;quot;, 1) fmt.Printf(&amp;quot;|%5d|&amp;quot;, 1234567)  输出结果如下：
| 1| |1234567|  %-5d则相反，打印结果会自动左对齐
 %05d会在数字前面补零。
  Float  %f (=%.6f) 6位小数点 %e (=%.6e) 6位小数点（科学计数法） %g 用最少的数字来表示 %.3g 最多3位数字来表示 %.3f 最多3位小数来表示  String  %s 正常输出字符串 %q 字符串带双引号，字符串中的引号带转义符 %#q 字符串带反引号，如果字符串内有反引号，就用双引号代替 %x 将字符串转换为小写的16进制格式 %X 将字符串转换为大写的16进制格式 % x 带空格的16进制格式  String Width (以5做例子）  %5s 最小宽度为5 %-5s 最小宽度为5（左对齐） %.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hopher.github.io/golang-tutorial/docs/with-toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hopher.github.io/golang-tutorial/docs/with-toc/</guid>
      <description>Caput vino delphine in tamen vias Cognita laeva illo fracta Lorem markdownum pavent auras, surgit nunc cingentibus libet Laomedonque que est. Pastor An arbor filia foedat, ne fugit aliter, per. Helicona illas et callida neptem est Oresitrophos caput, dentibus est venit. Tenet reddite famuli praesentem fortibus, quaeque vis foret si frondes gelidos gravidae circumtulit inpulit armenta nativum.
 Te at cruciabere vides rubentis manebo Maturuit in praetemptat ruborem ignara postquam habitasse Subitarum supplevit quoque fontesque venabula spretis modo Montis tot est mali quasque gravis Quinquennem domus arsit ipse Pellem turis pugnabant locavit  Natus quaerere Pectora et sine mulcere, coniuge dum tincta incurvae.</description>
    </item>
    
  </channel>
</rss>